post:
  tags:
    - Customers
  summary: 'Create a new customer'
  description: 'Data object requires: name, email (*must be unique*), phone number (*11 max character limit*) and password.\n*Limited to 5 per day*'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/CreateCustomer.yaml'
  responses:
    201:
      $ref: '../../componentns/responses/CreateCustomer.yaml'
    400:
      $ref: '../../components/responses/Customer400Message.yaml'
    401:
      $ref: '../../components/responses/Customer401Error.yaml'

put:
  tags: ['Customers', 'Customer Token Required']
  summary: "Change customer data - PROTECTED METHOD - add 'Bearer ' and paste in the token"
  description: 'Customer id based on bearer token decode payload, Logged-in customer can change their data.\n*Change some data to test - Limit 6 per day*'
  
  security:
    - bearerAuth: []
  
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/CreateCustomer.yaml'
          example:
            name: 'Kyle'
            password: ''
            phone: '9876543210'
            email: ''


  responses:
    200:
      description: 'Change successful'
      schema:
        $ref: ''
        example:
          description: 'Uppercase name field, and updated phone number'
          application/json:
            {
              'name': 'Kyle',
              'email': 'kyle@gmail.com',
              'password': 'test',
              'phone': '98765443210'
            }
    400:
      $ref: '../../components/responses/Customer400Message'

delete:
  tags: ['Customers', 'Customer Token Required']
  summary: 'Soft delete customers - PROTECTED METHOD - add 'Bearer ' and paste in the token'
  description: 'Set soft_delete parameter to 1 (true) - limit: 5 per day\n*NOTE: soft delete used to keep records for tax year or longer if recallable parts used in repair.*'
  
  security:
    - bearerAuth: []

  parameters: []

  responses:
    200:
      description: 'Customer successfully marked for deletion'
      schema:
        $ref: '../../components/schemas/Customer.yaml#/CustomerDeleteResponse'
        example:
          application/json:
            {
              'message': 'Customer successfully marked for deletion'
            }
    404:
      description: 'Customer not found'
      schema:
        $ref: '../components/responses/customer404Error.yaml'
        example:
          application/json:
            {
              'error': 'Customer not found.'
            }

get:
  tags: ['Customers', 'Mechanic Token Required']
  summary: 'Get All Customers - PROTECTED METHOD - add 'Bearer ' and paste in the mechanic token'
  description: 'Mechanics/Admin only\n *Example* /customers/?page=1&per_page=5'

  security:
    - bearerAuth: []

  parameters:
    - in: query
      name: page
      type: integer
      required: false
    - in: query
      name: per_page
      type: integer
      required: false

  responses:
    200:
      description: 'All customers view for mechanics, pagination is optional, '
      schema:
        $ref: '#/components/schemas/ViewCustomersAsMechanic'
        example:
          application/json:
            [{
              'id': 1,
              'name': 'Kyle',
              'email': 'kyle@gmail.com',
              'phone': '0123456789'
            },
            {
              'id': integer,
              'name': 'Rev',
              'email': 'rev@gmail.com',
              'phone': '1234567890'
            }]